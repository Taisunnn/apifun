version: "3.8"

x-mysql-env: &mysql_env
  MYSQL_DATABASE: ${MYSQL_DATABASE}
  MYSQL_USER: ${MYSQL_USER}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
  MYSQL_HOST: ${MYSQL_HOST}

x-common-airflow: &airflow_common
    build:
      context: .
      dockerfile: Dockerfile.airflow
    volumes:
      - "./airflow/dags:/root/airflow/dags"
    environment:
      <<: *mysql_env
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}"
      AIRFLOW__CORE__PARALLELISM: 2
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DAG_DIR_LIST_INTERVAL: 15
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy

services:
  db:
    image: mysql:8
    environment:
      << : *mysql_env
    ports:
      - '3305:3306'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    command: ["debug"]
    environment:
      << : *mysql_env
      MYSQL_PORT: ${MYSQL_PORT}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./app:/src/app
      - ./tests:/src/tests
    ports:
      - '5001:5000'
    depends_on:
      db:
        condition: service_healthy

  airflow-init:
      << : *airflow_common
      entrypoint: ["/bin/sh","-c"]
      command:
        - |
          airflow db migrate
          airflow users create \
          --username admin \
          --password admin \
          --firstname airflow \
          --lastname airflow \
          --role Admin \
          --email airflow@airflow.org
      restart: on-failure

  airflow-webserver:
    << : *airflow_common
    command: airflow webserver
    ports:
      - '8080:8080'
    container_name: airflow_webserver
    depends_on:
      - airflow-init
    restart: always

  airflow-scheduler:
    << : *airflow_common
    command: airflow scheduler
    container_name: airflow_scheduler
    depends_on:
      - airflow-init
    restart: always

